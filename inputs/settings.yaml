
# OUTPUT FILE
result_path : './results'
result_filename : AlexNet

# OUTPUT FILE PRINTING MODE
# 'concise' for printing the basic information for each optimal design point found, i.e. energy and performance.
# 'complete' for printing all detailed information for each optimal design point found for in-depth analysis.
result_print_mode : complete
# type of output file to generate : yaml or xml
result_print_type : xml

# SEARCH SETTINGS
# 'False' for searching the corresponding space.
fixed_architecture : True
fixed_spatial_unrolling : True
fixed_temporal_mapping : False

# RESULT SAVING SETTINGS
# 'False' for only saving the best result.
# Be careful to put "save_all_temporal_mapping_result" to True, because it can generate large result files.
save_all_architecture_result : True
save_all_spatial_unrolling_result : True
save_all_temporal_mapping_result : False

# WORKLOAD
# layer_indices can be a single-element list or a multiple-element list or ALL.
layer_filename : './NN_layers/AlexNet'
layer_indices : [4]
# layer_indices : ALL

# MULTIPROCESSING
# run the framework in multiprocessing mode to speedup the search procedure.
layer_multiprocessing : 1
architecture_search_multiprocessing : 1
spatial_unrolling_multiprocessing : 1
temporal_mapping_multiprocessing: 8

# TEMPORAL MAPPING GENERATOR SETTINGS
# search_method : exhaustive / heuristic_v1 / heuristic_v2 / iterative / loma
temporal_mapping_search_method : loma
# memory allocation: even / uneven
temporal_mapping_search_space: even

# SPATIAL MAPPING GENERATOR SETTINGS
# search method : exhaustive / heuristic_v1 / heuristic_v2 / hint_driven / greedy_mapping_with_hint / greedy_mapping_without_hint
# If 'hint_driven' or 'greedy_mapping_with_hint' is chosen, 'spatial_mapping_list' in the mapping.yaml file will be used.
# Greedy mapping allows MAC array to be always fully utilized except for the last time,
  # e.g. to map (C,10) on a row of 8 PEs, without greedy mapping enabled, the tool will map (C,5), (C,5);
  # with greedy mapping enabled, it will map (C,8), (C,2).
spatial_unrolling_search_method : hint_driven
spatial_utilization_threshold : 0.9

# CONV im2col ENABLE
# Weight matrix [K,       C|FX|FY]
# Input  matrix [B|OY|OX, C|FY|FX]
# Output matrix [K,       B|OY|OX]
# Process convolution as matrix-matrix multiplication.
# For pointwise layers (FX=FY=1), im2col transfer can speedup mapping search process without losing results' optimality.
# For non-pointwise layers, im2col transfer can speedup mapping search process but with overhead
  # that input figure map needs to be repetitively stored/accessed in the memory.
# Set im2col_enable_for_all_layers True will auto apply in2col transfer to all the NN layers under test.
# Set im2col_enable_for_pointwise_layers True will auto apply in2col transfer to all the pointwise NN layers under test.
im2col_enable_for_all_layers : False
im2col_enable_for_pointwise_layers : True

# Save result files during processing. This is useful to prevent a lot of work being wasted if a crash occurs.
# The saving is supplementary to that at the end of the processing, and is done in a separate folder.
save_results_on_the_fly: True

# Limit the maximal number of loop prime factors (lpfs) allowed for a single layer's temporal mapping search.
# Setting this to a number larger than 20 should result in no limiting being performed.
max_nb_lpf_layer: 10
